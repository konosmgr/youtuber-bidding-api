name: youtuber-bidding-api
services:
  api:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/app
    env_file:
      - ../env/.env.dev
    ports:
      - "8000:8000"
    networks:
      - youtuber-bidding
    # Add this to keep container running if Django exits
    tty: true
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_SETTINGS_MODULE=core.settings.dev
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,api,*

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    networks:
      - youtuber-bidding

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - youtuber-bidding

  # celery worker and beat services are commented out for initial debugging
  # uncomment these once the main API service is working
  
  # celery:
  #   build:
  #     context: ..
  #     dockerfile: .devcontainer/Dockerfile
  #   command: celery -A core worker -l info
  #   volumes:
  #     - ..:/app
  #   env_file:
  #     - ../env/.env.dev
  #   depends_on:
  #     - api
  #     - redis
  #   networks:
  #     - youtuber-bidding
      
  # celery-beat:
  #   build:
  #     context: ..
  #     dockerfile: .devcontainer/Dockerfile
  #   command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   volumes:
  #     - ..:/app
  #   env_file:
  #     - ../env/.env.dev
  #   depends_on:
  #     - api
  #     - redis
  #     - celery
  #   networks:
  #     - youtuber-bidding

volumes:
  postgres_data:

networks:
  youtuber-bidding:
    driver: bridge
    # This is important - remove the "external: true" to create the network
    # if it doesn't exist
